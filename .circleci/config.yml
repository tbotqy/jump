version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
anchors:
  # for backend
  restore_backend_cache: &restore_backend_cache
    # Download and cache dependencies
    - restore_cache:
        keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
  install_libs_for_idn_ruby: &install_libs_for_idn_ruby
    - run:
        name: install libidn11-dev for gem 'twitter-text'(which depends on idn-ruby)
        command: sudo apt update && sudo apt -y install libidn11-dev
  install_backend_dependencies: &install_backend_dependencies
    - run:
        name: install dependencies
        command: |
          bundle check || bundle install --jobs=4 --retry=3 --path vendor/bundle
  save_backend_cache: &save_backend_cache
    - save_cache:
        paths:
          - ./vendor/bundle
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}

  # for frontend
  frontend_docker_env: &frontend_docker_env
    - image: circleci/node:latest
      environment:
        TZ: Asia/Tokyo
  restore_frontend_cache: &restore_frontend_cache
    - restore_cache:
        keys:
          - v1-dependencies-{{ checksum "frontend/yarn.lock" }}
          - v1-dependencies-
  install_frontend_dependencies: &install_frontend_dependencies
    - run:
        working_directory: "frontend"
        command: yarn install
  save_frontend_cache: &save_frontend_cache
    - save_cache:
        paths:
          - ./frontend/node_modules
        key: v1-dependencies-{{ checksum "frontend/yarn.lock" }}

jobs:
  # for backend
  lint_backend:
    docker:
      - image: circleci/ruby:2.6.3-stretch
    steps:
      - checkout
      - <<: *restore_backend_cache
      - <<: *install_libs_for_idn_ruby
      - <<: *install_backend_dependencies
      - <<: *save_backend_cache
      - run: bundle exec rubocop

  build_backend:
    docker:
      - image: circleci/ruby:2.6.3-stretch
      - image: circleci/mysql:5.7
      - image: circleci/redis:4
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *restore_backend_cache
      - <<: *install_libs_for_idn_ruby
      - <<: *install_backend_dependencies
      - <<: *save_backend_cache
      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES
      - codecov/upload:
          file: /tmp/test-results/rspec.xml

  # for frontend
  lint_frontend:
    docker:
      - <<: *frontend_docker_env
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *restore_frontend_cache
      - <<: *install_frontend_dependencies
      - <<: *save_frontend_cache
      - run:
          working_directory: "frontend"
          command: yarn lint

  build_frontend:
    docker:
      - <<: *frontend_docker_env
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *restore_frontend_cache
      - <<: *install_frontend_dependencies
      - <<: *save_frontend_cache
      - run:
          working_directory: "frontend"
          command: yarn build

  deploy:
    docker:
      - image: circleci/ruby:2.6.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "61:b7:07:85:a1:14:6b:d6:a5:a2:73:01:a1:ac:fb:95"
      - <<: *restore_backend_cache
      - <<: *install_libs_for_idn_ruby
      - <<: *install_backend_dependencies
      - <<: *save_backend_cache
      - run:
          name: Deploy
          command: bundle exec cap production deploy
          environment:
            REDUCE_CAP_LOG: 1

workflows:
  version: 2
  frontend:
    jobs:
      - lint_frontend
      - build_frontend:
          requires:
            - lint_frontend
  backend:
    jobs:
      - lint_backend
      - build_backend:
          requires:
            - lint_backend
      - deploy:
          requires:
            - build_backend
          filters:
            branches:
              only: master
